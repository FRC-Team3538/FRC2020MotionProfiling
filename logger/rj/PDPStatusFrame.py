# automatically generated by the FlatBuffers compiler, do not modify

# namespace: rj

import flatbuffers

class PDPStatusFrame(object):
    __slots__ = ['_tab']

    # PDPStatusFrame
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # PDPStatusFrame
    def Module(self): return self._tab.Get(flatbuffers.number_types.Int32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # PDPStatusFrame
    def Voltage(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(8))
    # PDPStatusFrame
    def Temperature(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(16))
    # PDPStatusFrame
    def Channel0Current(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(24))
    # PDPStatusFrame
    def Channel1Current(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(32))
    # PDPStatusFrame
    def Channel2Current(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(40))
    # PDPStatusFrame
    def Channel3Current(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(48))
    # PDPStatusFrame
    def Channel4Current(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(56))
    # PDPStatusFrame
    def Channel5Current(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(64))
    # PDPStatusFrame
    def Channel6Current(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(72))
    # PDPStatusFrame
    def Channel7Current(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(80))
    # PDPStatusFrame
    def Channel8Current(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(88))
    # PDPStatusFrame
    def Channel9Current(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(96))
    # PDPStatusFrame
    def Channel10Current(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(104))
    # PDPStatusFrame
    def Channel11Current(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(112))
    # PDPStatusFrame
    def Channel12Current(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(120))
    # PDPStatusFrame
    def Channel13Current(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(128))
    # PDPStatusFrame
    def Channel14Current(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(136))
    # PDPStatusFrame
    def Channel15Current(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(144))
    # PDPStatusFrame
    def TotalCurrent(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(152))
    # PDPStatusFrame
    def TotalPower(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(160))
    # PDPStatusFrame
    def TotalEnergy(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(168))

def CreatePDPStatusFrame(builder, module, voltage, temperature, channel0Current, channel1Current, channel2Current, channel3Current, channel4Current, channel5Current, channel6Current, channel7Current, channel8Current, channel9Current, channel10Current, channel11Current, channel12Current, channel13Current, channel14Current, channel15Current, totalCurrent, totalPower, totalEnergy):
    builder.Prep(8, 176)
    builder.PrependFloat64(totalEnergy)
    builder.PrependFloat64(totalPower)
    builder.PrependFloat64(totalCurrent)
    builder.PrependFloat64(channel15Current)
    builder.PrependFloat64(channel14Current)
    builder.PrependFloat64(channel13Current)
    builder.PrependFloat64(channel12Current)
    builder.PrependFloat64(channel11Current)
    builder.PrependFloat64(channel10Current)
    builder.PrependFloat64(channel9Current)
    builder.PrependFloat64(channel8Current)
    builder.PrependFloat64(channel7Current)
    builder.PrependFloat64(channel6Current)
    builder.PrependFloat64(channel5Current)
    builder.PrependFloat64(channel4Current)
    builder.PrependFloat64(channel3Current)
    builder.PrependFloat64(channel2Current)
    builder.PrependFloat64(channel1Current)
    builder.PrependFloat64(channel0Current)
    builder.PrependFloat64(temperature)
    builder.PrependFloat64(voltage)
    builder.Pad(4)
    builder.PrependInt32(module)
    return builder.Offset()
